name: Test

on:
  push:
  pull_request:

jobs:
  test:
    name: ${{ matrix.runner }}-amd64-${{ matrix.compiler }} ${{ ((matrix.openmp == 1) && '+openmp') || '' }}
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        runner: ["ubuntu-20.04"]
        compiler: ["gcc", "clang"]
        openmp: ["0", "1"]
        include:
          - runner: "macos-11"
            compiler: "clang"
            openmp: "0"
    env:
      OPENMP: ${{ matrix.openmp }}
      OMP_NUM_THREADS: ${{ ((matrix.openmp == 1) && '4') || '0' }}
      CC: ${{ matrix.compiler }}
      OBJCOPY: ${{ (startsWith(matrix.runner, 'macos') && 'echo') || 'objcopy' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run tests
        run: ./test/ci/amd64.sh
  test-alpine:
    name: alpine-amd64-gcc
    runs-on: ubuntu-20.04
    container:
      image: alpine:3.12
      env:
        CC: gcc
    steps:
      - name: Install deps
        run: apk add --update bash build-base git
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run tests
        run: ./test/ci/amd64.sh
